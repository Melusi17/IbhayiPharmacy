@model List<IbhayiPharmacy.Models.PharmacistVM.CustomerOrderVM>
@{
    ViewData["Title"] = "Place Order - Customer Dashboard";
    Layout = "~/Views/Shared/CustomerLayout/_CustomerLayout.cshtml";
}
<style>
    /* Focused CSS for Place Order view only */
    body {
        margin: 0;
        font-family: 'Segoe UI', sans-serif;
        background-color: #f4f6f9;
        overflow: hidden;
    }

    .dashboard-wrapper {
        display: flex;
        height: 100vh;
    }

    .main-content {
        flex: 1;
        padding: 30px;
        overflow-y: auto;
    }

    .upload-prescription-panel {
        background: white;
        padding: 30px;
        border-radius: 16px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.07);
        max-width: 1200px;
        margin: 20px auto;
    }

    .btn-upload {
        background-color: #1f9f77;
        color: white;
        border: none;
        padding: 12px 24px;
        border-radius: 8px;
        font-size: 15px;
        font-weight: 600;
        cursor: pointer;
        transition: background-color 0.3s ease;
        margin-right: 10px;
    }

        .btn-upload:hover {
            background-color: #28bf96;
        }

        .btn-upload:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }

        .btn-upload.cancel {
            background-color: #999;
        }

            .btn-upload.cancel:hover {
                background-color: #777;
            }

    .prescription-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 15px;
        font-size: 14px;
    }

        .prescription-table th,
        .prescription-table td {
            padding: 12px 15px;
            border: 1px solid #ccc;
            text-align: left;
        }

        .prescription-table th {
            background-color: #e0f2f1;
            color: #004d40;
        }

    .checkbox-cell {
        text-align: center;
    }

    .price-cell {
        text-align: right;
        font-weight: bold;
    }

    .no-medications {
        text-align: center;
        padding: 40px;
        color: #666;
        font-style: italic;
    }

    .order-summary-container {
        margin-top: 20px;
        padding: 20px;
        background-color: #e6f5f1;
        border-left: 4px solid #1f9f77;
        border-radius: 8px;
    }

    .summary {
        font-size: 16px;
        margin-bottom: 20px;
    }

    .repeat-badge {
        display: inline-block;
        padding: 2px 8px;
        border-radius: 12px;
        font-size: 12px;
        font-weight: bold;
        margin-left: 5px;
    }

    .repeat-available {
        background-color: #e8f5e8;
        color: #2e7d32;
    }

    .no-repeat {
        background-color: #fff3e0;
        color: #ef6c00;
    }

    /* Modal Styling */
    .modal-overlay {
        position: fixed;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: rgba(0, 0, 0, 0.5);
        z-index: 1000;
        display: none;
        align-items: center;
        justify-content: center;
    }

    .modal-content {
        background: #fff;
        padding: 30px;
        border-radius: 10px;
        width: 600px;
        max-height: 80vh;
        overflow-y: auto;
        box-shadow: 0 4px 20px rgba(0,0,0,0.2);
    }

        .modal-content h3 {
            margin-bottom: 20px;
            font-size: 20px;
        }

    .modal-table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

        .modal-table th,
        .modal-table td {
            border: 1px solid #ccc;
            padding: 8px;
            text-align: left;
        }

        .modal-table th {
            background-color: #f5f5f5;
        }

    .modal-buttons {
        text-align: right;
    }

    .total-summary {
        font-size: 16px;
        margin-bottom: 10px;
    }

    /* Alert Messages */
    .success-message {
        text-align: center;
        color: #1f9f77;
        font-weight: 500;
        background-color: #e6f5f1;
        padding: 10px;
        border-radius: 5px;
        margin: 10px 0;
    }

    .error-message {
        text-align: center;
        color: #e74c3c;
        font-weight: 500;
        background-color: #f8d7da;
        padding: 10px;
        border-radius: 5px;
        margin: 10px 0;
    }
</style>
        <!-- Main Content -->
        <main class="main-content" id="mainContent">
            <div class="upload-prescription-panel">
                <h2>📦 Place Medication Order</h2>

                <!-- Alert Messages -->
                <div id="orderStatus"></div>

                @if (!Model.Any())
                {
                    <div class="no-medications">
                        <h3>No medications available for ordering</h3>
                        <p>You don't have any approved prescriptions ready for ordering.</p>
                        <p>Please upload a prescription first or check if your prescriptions have been processed.</p>
                        <a asp-controller="CustomerDashboard" asp-action="UploadPrescription" class="btn-upload" style="margin-top: 15px;">
                            📥 Upload Prescription
                        </a>
                    </div>
                }
                else
                {
                    <form id="orderForm" asp-controller="CustomerOrders" asp-action="PlaceOrder" method="post">
                        @Html.AntiForgeryToken()

                        <table class="prescription-table">
                            <thead>
                                <tr>
                                    <th>Select</th>
                                    <th>Doctor</th>
                                    <th>Medication</th>
                                    <th>Qty</th>
                                    <th>Repeats</th>
                                    <th>Instructions</th>
                                    <th>Unit Price (R)</th>
                                    <th>Total (R)</th>
                                </tr>
                            </thead>
                            <tbody id="medicationBody">
                                @for (int i = 0; i < Model.Count; i++)
                                {
                                    var medication = Model[i];
                                    <tr>
                                        <td class="checkbox-cell">
                                            <input type="checkbox"
                                                   class="med-check"
                                                   name="SelectedScriptLineIds"
                                                   value="@medication.ScriptLineID"
                                                   data-price="@medication.CurrentPrice"
                                                   data-quantity="@medication.Quantity"
                                                   onchange="updateTotals()" />
                                        </td>
                                        <td>@medication.FullDoctorName</td>
                                        <td>@medication.MedicationName</td>
                                        <td>@medication.Quantity</td>
                                        <td>
                                            @if (medication.RepeatsLeft > 0)
                                            {
                                                <span class="repeat-badge repeat-available" title="Available for refills">
                                                    🔄 @medication.RepeatsLeft of @medication.TotalRepeats
                                                </span>
                                            }
                                            else
                                            {
                                                <span class="repeat-badge no-repeat" title="One-time medication">
                                                    ⏸️ No repeats
                                                </span>
                                            }
                                        </td>
                                        <td>@medication.Instructions</td>
                                        <td class="price-cell">@medication.CurrentPrice.ToString("F2")</td>
                                        <td class="price-cell">@medication.LineTotal.ToString("F2")</td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                        <div class="order-summary-container">
                            <div class="summary">
                                <p>Subtotal: R<span id="subtotal">0.00</span></p>
                                <p>Tax (15%): R<span id="tax">0.00</span></p>
                                <p><strong>Total Due: R</strong><span id="total">0.00</span></p>
                            </div>

                            <div class="form-group">
                                <button type="button" class="btn-upload" onclick="showOrderSummary()" id="placeOrderBtn" disabled>
                                    Place Order
                                </button>
                                <button type="button" class="btn-upload cancel" onclick="clearSelection()">
                                    Clear Selection
                                </button>
                            </div>
                        </div>
                    </form>

                    <!-- Confirmation Modal -->
                    <div id="confirmationModal" class="modal-overlay">
                        <div class="modal-content">
                            <h3>✅ Confirm Medication Order</h3>

                            <p><strong>Order Summary</strong></p>
                            <table class="modal-table">
                                <thead>
                                    <tr>
                                        <th>Doctor</th>
                                        <th>Medication</th>
                                        <th>Qty</th>
                                        <th>Repeats</th>
                                        <th>Price (R)</th>
                                        <th>Total (R)</th>
                                    </tr>
                                </thead>
                                <tbody id="confirmationBody"></tbody>
                            </table>
                            <p class="total-summary"><strong>Subtotal: R<span id="modalSubtotal">0.00</span></strong></p>
                            <p class="total-summary"><strong>Tax (15%): R<span id="modalTax">0.00</span></strong></p>
                            <p class="total-summary"><strong>Total Due (incl. VAT): R<span id="modalTotal">0.00</span></strong></p>
                            <div class="modal-buttons">
                                <button type="button" class="btn-upload" onclick="submitOrder()">Confirm Order</button>
                                <button type="button" class="btn-upload cancel" onclick="closeConfirmation()">Cancel</button>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </main>

    <script>
        // Update order totals based on selected medications
        function updateTotals() {
            const checkboxes = document.querySelectorAll('.med-check:checked');
            let subtotal = 0;
            const selectedItems = [];

            checkboxes.forEach(cb => {
                const price = parseFloat(cb.dataset.price || 0);
                const quantity = parseInt(cb.dataset.quantity || 1);
                const lineTotal = price * quantity;
                subtotal += lineTotal;

                // Get row data for confirmation modal
                const row = cb.closest('tr');
                const cells = row.querySelectorAll('td');
                selectedItems.push({
                    doctor: cells[1].textContent.trim(),
                    medication: cells[2].textContent.trim(),
                    quantity: cells[3].textContent.trim(),
                    repeats: cells[4].textContent.trim(),
                    price: price,
                    lineTotal: lineTotal
                });
            });

            const tax = subtotal * 0.15;
            const total = subtotal + tax;

            document.getElementById('subtotal').textContent = subtotal.toFixed(2);
            document.getElementById('tax').textContent = tax.toFixed(2);
            document.getElementById('total').textContent = total.toFixed(2);

            // Enable/disable place order button
            const placeOrderBtn = document.getElementById('placeOrderBtn');
            placeOrderBtn.disabled = checkboxes.length === 0;

            // Store selected items for confirmation modal
            window.selectedOrderItems = selectedItems;
            window.orderSubtotal = subtotal;
            window.orderTax = tax;
            window.orderTotal = total;
        }

        // Show order summary in modal
        function showOrderSummary() {
            const checkboxes = document.querySelectorAll('.med-check:checked');
            if (checkboxes.length === 0) {
                showOrderStatus('⚠️ Please select at least one medication.', 'error');
                return;
            }

            const tbody = document.getElementById('confirmationBody');
            tbody.innerHTML = '';

            window.selectedOrderItems.forEach(item => {
                const row = document.createElement('tr');
                row.innerHTML = `
                    <td>${item.doctor}</td>
                    <td>${item.medication}</td>
                    <td>${item.quantity}</td>
                    <td>${item.repeats}</td>
                    <td>${item.price.toFixed(2)}</td>
                    <td>${item.lineTotal.toFixed(2)}</td>
                `;
                tbody.appendChild(row);
            });

            // Show totals in modal
            document.getElementById('modalSubtotal').textContent = window.orderSubtotal.toFixed(2);
            document.getElementById('modalTax').textContent = window.orderTax.toFixed(2);
            document.getElementById('modalTotal').textContent = window.orderTotal.toFixed(2);

            // Show modal
            document.getElementById('confirmationModal').style.display = 'flex';
        }

        // Submit the actual form
        function submitOrder() {
            document.getElementById('orderForm').submit();
        }

        // Close confirmation modal
        function closeConfirmation() {
            document.getElementById('confirmationModal').style.display = 'none';
        }

        // Clear selection
        function clearSelection() {
            document.querySelectorAll('.med-check').forEach(cb => {
                cb.checked = false;
            });
            updateTotals();
        }

        // Show order status message
        function showOrderStatus(message, type) {
            const statusDiv = document.getElementById('orderStatus');
            statusDiv.innerHTML = '';

            const messageDiv = document.createElement('div');
            messageDiv.className = type === 'success' ? 'success-message' : 'error-message';
            messageDiv.textContent = message;
            statusDiv.appendChild(messageDiv);
        }

        // Profile menu functions
        function toggleProfileMenu() {
            const menu = document.getElementById('profileMenu');
            if (menu) {
                menu.classList.toggle('hidden');
            }
        }

        // Close profile menu when clicking outside
        document.addEventListener('click', function(event) {
            const profileMenu = document.getElementById('profileMenu');
            const profileIcon = document.querySelector('.profile-icon');

            if (profileMenu && !profileMenu.contains(event.target) && !profileIcon.contains(event.target)) {
                profileMenu.classList.add('hidden');
            }
        });

        // Initialize page - update totals on load
        document.addEventListener('DOMContentLoaded', function() {
            updateTotals();
        });
    </script>

@model IbhayiPharmacy.Models.CustomerVM.UploadPrescriptionViewModel
@{
    ViewData["Title"] = "Upload Prescription";
    Layout = "~/Views/Shared/CustomerLayout/_CustomerLayout.cshtml";
}
<style>
    .drop-area {
        border: 2px dashed #1f9f77;
        padding: 40px;
        text-align: center;
        cursor: pointer;
        color: #1f9f77;
        border-radius: 10px;
        margin-bottom: 20px;
        transition: background-color 0.3s, border-color 0.3s;
    }

        .drop-area.drag-over {
            background-color: #e0f7f1;
            border-color: #28bf96;
        }

    .file-preview {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 20px;
        background-color: #f0f8f7;
        padding: 10px;
        border-radius: 5px;
    }

    .btn-remove {
        background-color: #e74c3c;
        color: white;
        border: none;
        padding: 6px 12px;
        border-radius: 4px;
        cursor: pointer;
        font-weight: bold;
    }

        .btn-remove:hover {
            background-color: #c0392b;
        }

    .btn-upload {
        background-color: #1f9f77;
        color: white;
        border: none;
        padding: 10px 20px;
        border-radius: 5px;
        font-weight: bold;
        cursor: pointer;
        margin-top: 10px;
    }

        .btn-upload:hover {
            background-color: #178f6a;
        }

    .checkbox-container {
        margin-top: 15px;
        text-align: left;
    }

    .checkbox-label {
        display: flex;
        align-items: center;
        font-weight: 500;
        font-size: 14px;
        color: #333;
        gap: 8px;
    }

    .upload-prescription-panel {
        margin-top: 40px;
    }

    .prescription-table {
        width: 100%;
        border-collapse: collapse;
    }

        .prescription-table th, .prescription-table td {
            padding: 10px;
            border: 1px solid #ccc;
            text-align: left;
        }

    .alert {
        padding: 10px;
        margin-top: 15px;
        border-radius: 5px;
    }

    .alert-success {
        background-color: #d4edda;
        color: #155724;
    }

    .alert-danger {
        background-color: #f8d7da;
        color: #721c24;
    }
</style>

<h2>📥 Upload Prescription</h2>

<form asp-action="UploadPrescription" asp-controller="Customer" method="post" enctype="multipart/form-data">
    <!-- Drop area -->
    <div id="drop-area" class="drop-area">
        <p>Drag & Drop PDF/Image here or click to select</p>
        <input type="file" id="prescriptionFile" name="prescriptionFile" accept=".pdf,image/*" required hidden>
    </div>

    <!-- File preview with remove button -->
    <div class="file-preview" id="filePreview" style="display:none;">
        <span id="fileName"></span>
        <button type="button" class="btn-remove" onclick="removeSelectedFile()">❌ Remove</button>
    </div>

    <!-- Dispense checkbox -->
    <div class="checkbox-container">
        <label class="checkbox-label">
            <input type="checkbox" id="dispenseCheckbox" name="dispenseCheckbox">
            Dispense this prescription upon approval
        </label>
    </div>

    <!-- Upload Button -->
    <button type="submit" class="btn-upload">Upload</button>
</form>

@if (TempData["Message"] != null)
{
    <div class="alert alert-success">@TempData["Message"]</div>
}

@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">@TempData["Error"]</div>
}

<!-- Unprocessed Prescriptions -->
<div class="upload-prescription-panel">
    <h2>📋 Unprocessed Prescriptions</h2>
    <table class="prescription-table">
        <thead>
            <tr>
                <th>Date</th>
                <th>File</th>
                <th>Dispense</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="unprocessedBody">
            @foreach (var p in Model.UnprocessedPrescriptions)
            {
                <tr>
                    <td>@p.DateIssued.ToString("yyyy-MM-dd")</td>
                    <td>@p.FileName</td>
                    <td>@(p.IsProcessed ? "Yes" : "No")</td>
                    <td>
                        <a asp-action="DownloadPrescription" asp-route-id="@p.PrescriptionID" class="btn-upload">Download</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<!-- Processed Prescriptions -->
<div class="upload-prescription-panel">
    <h2>✅ Processed Prescriptions</h2>
    <table class="prescription-table">
        <thead>
            <tr>
                <th>Date</th>
                <th>Doctor</th>
                <th>Prescription</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody id="processedBody">
            @foreach (var p in Model.ProcessedPrescriptions)
            {
                <tr>
                    <td>@p.DateIssued.ToString("yyyy-MM-dd")</td>
                    <td>@p.Doctor.Name @p.Doctor.Surname</td>
                    <td>@p.FileName</td>
                    <td>
                        <a asp-action="DownloadPrescription" asp-route-id="@p.PrescriptionID" class="btn-upload">View</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    const dropArea = document.getElementById('drop-area');
    const fileInput = document.getElementById('prescriptionFile');
    const filePreview = document.getElementById('filePreview');
    const fileNameDisplay = document.getElementById('fileName');

    // Click triggers file input
    dropArea.addEventListener('click', () => fileInput.click());

    // Drag & Drop
    dropArea.addEventListener('dragover', e => { e.preventDefault(); dropArea.classList.add('drag-over'); });
    dropArea.addEventListener('dragleave', () => dropArea.classList.remove('drag-over'));
    dropArea.addEventListener('drop', e => {
        e.preventDefault();
        dropArea.classList.remove('drag-over');
        const file = e.dataTransfer.files[0];
        if (file) { fileInput.files = e.dataTransfer.files; handleFileUpload(file); }
    });

    fileInput.addEventListener('change', e => handleFileUpload(e.target.files[0]));

    function handleFileUpload(file) {
        fileNameDisplay.textContent = file.name;
        filePreview.style.display = 'flex';
    }

    function removeSelectedFile() {
        fileInput.value = '';
        filePreview.style.display = 'none';
        fileNameDisplay.textContent = '';
    }
</script>



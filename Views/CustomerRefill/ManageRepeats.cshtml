@using IbhayiPharmacy.Models.PharmacistVM
@model List<PrescriptionRefillVM>
@{
    ViewData["Title"] = "Manage Repeats";
    Layout = "~/Views/Shared/CustomerLayout/_CustomerLayout.cshtml";
}
<style>
    .upload-prescription-panel {
        background: white;
        padding: 30px;
        border-radius: 16px;
        box-shadow: 0 4px 12px rgba(0,0,0,0.07);
        max-width: 1200px;
        margin: 20px auto;
        height: auto;
        min-height: 600px;
    }

    h2 {
        color: #1f9f77;
        margin-bottom: 20px;
        font-size: 24px;
    }

    .prescription-table, .modal-table {
        width: 100%;
        border-collapse: collapse;
        margin-top: 20px;
        background-color: #ffffff;
        border: 1px solid #ccc;
        border-radius: 8px;
        overflow: hidden;
        box-shadow: 0 2px 8px rgba(0, 0, 0, 0.1);
    }

        .prescription-table th, .prescription-table td,
        .modal-table th, .modal-table td {
            padding: 12px;
            text-align: center;
            border: 1px solid #ccc;
        }

        .prescription-table thead,
        .modal-table thead {
            background-color: #1f9f77;
            color: white;
        }

        .prescription-table tbody tr:nth-child(even),
        .modal-table tbody tr:nth-child(even) {
            background-color: #f9f9f9;
        }

        .prescription-table tbody tr:hover,
        .modal-table tbody tr:hover {
            background-color: #e3f5f0;
        }

    .order-row {
        cursor: pointer;
        background-color: #d6f5e3;
        font-weight: bold;
        color: #0d3d2c;
    }

        .order-row:hover {
            background-color: #c0ecd5;
        }

    .medication-details {
        display: none;
        background-color: #f9f9f9;
    }

    .btn-view-history, .btn-request-refill {
        background-color: #1f9f77;
        color: white;
        padding: 8px 16px;
        border: none;
        border-radius: 6px;
        cursor: pointer;
        font-weight: 600;
        transition: background-color 0.3s ease;
        margin: 2px;
        font-size: 14px;
    }

        .btn-view-history:hover, .btn-request-refill:hover {
            background-color: #28bf96;
        }

        .btn-request-refill:disabled {
            background-color: #cccccc;
            cursor: not-allowed;
        }

    .no-repeats {
        color: #999;
        font-style: italic;
        padding: 8px 0;
    }

    /* Modal Styling */
    .modal {
        display: none;
        position: fixed;
        z-index: 9999;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        overflow: auto;
        background: rgba(0, 0, 0, 0.5);
    }

    .modal-content {
        background-color: #ffffff;
        margin: 10% auto;
        padding: 30px;
        border-radius: 16px;
        width: 600px;
        position: relative;
        box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
        color: #333;
    }

        .modal-content h3 {
            color: #1f9f77;
            margin-bottom: 20px;
            font-size: 20px;
        }

    .close {
        position: absolute;
        right: 20px;
        top: 15px;
        color: #999;
        font-size: 24px;
        cursor: pointer;
        font-weight: bold;
    }

        .close:hover {
            color: red;
        }

    .modal-footer {
        text-align: right;
        margin-top: 20px;
        font-weight: bold;
    }

    .loading {
        text-align: center;
        color: #666;
        padding: 20px;
        font-style: italic;
    }

    .success-message {
        background-color: #d4edda;
        color: #155724;
        padding: 12px 16px;
        border-radius: 8px;
        margin: 10px 0;
        border: 1px solid #c3e6cb;
        font-weight: 500;
    }

    .error-message {
        background-color: #f8d7da;
        color: #721c24;
        padding: 12px 16px;
        border-radius: 8px;
        margin: 10px 0;
        border: 1px solid #f5c6cb;
        font-weight: 500;
    }

    /* Empty state styling */
    .prescription-table td[colspan="2"] {
        text-align: center;
        padding: 40px;
        color: #666;
        font-style: italic;
    }
</style>

<!-- Anti-forgery token for POST requests -->
@Html.AntiForgeryToken()

<main class="main-content" id="mainContent">
    <div class="upload-prescription-panel">
        <h2>Manage Repeat Prescriptions</h2>

        <table class="prescription-table" id="orders-table">
            <thead>
                <tr>
                    <th>Doctor</th>
                    <th>Prescription Date</th>
                </tr>
            </thead>
            <tbody>
                @if (Model != null && Model.Any())
                {
                    @foreach (var prescription in Model)
                    {
                        <tr class="order-row" data-prescription-id="@prescription.PrescriptionID">
                            <td data-doctor="@prescription.DoctorName">@prescription.DoctorName</td>
                            <td data-date="@prescription.PrescriptionDate.ToString("yyyy-MM-dd")">@prescription.PrescriptionDate.ToString("yyyy-MM-dd")</td>
                        </tr>
                        <tr class="medication-details" data-parent-id="@prescription.PrescriptionID">
                            <td colspan="2">
                                <table class="modal-table">
                                    <thead>
                                        <tr>
                                            <th>Medication</th>
                                            <th>Instructions</th>
                                            <th>Quantity</th>
                                            <th>Repeats Left</th>
                                            <th>Actions</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @foreach (var medication in prescription.Medications)
                                        {
                                            <tr class="prescription-row"
                                                data-script-line-id="@medication.ScriptLineID"
                                                data-prescription-id="@prescription.PrescriptionID"
                                                data-medication-id="@medication.MedicationID"
                                                data-medication="@medication.MedicationName"
                                                data-price="@medication.CurrentPrice"
                                                data-qty="@medication.Quantity"
                                                data-repeats-left="@medication.RepeatsLeft">
                                                <td class="medication-name">@medication.MedicationName</td>
                                                <td>@medication.Instructions</td>
                                                <td>@medication.Quantity</td>
                                                <td class="repeats-left">@medication.RepeatsLeft</td>
                                                <td>
                                                    <button class="btn-view-history"
                                                            data-script-line-id="@medication.ScriptLineID"
                                                            data-medication-name="@medication.MedicationName">
                                                        View History
                                                    </button>
                                                    @if (medication.RepeatsLeft > 0)
                                                    {
                                                        <button class="btn-request-refill"
                                                                data-script-line-id="@medication.ScriptLineID"
                                                                data-medication-name="@medication.MedicationName">
                                                            Request Refill
                                                        </button>
                                                    }
                                                    else
                                                    {
                                                        <span class="no-repeats">No repeats left</span>
                                                    }
                                                </td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </td>
                        </tr>
                    }
                }
                else
                {
                    <tr>
                        <td colspan="2" style="text-align: center; padding: 20px;">
                            No medications available for refill at this time.
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

</main>

<!-- Refill History Modal -->
<div class="modal" id="refill-modal">
    <div class="modal-content">
        <span class="close" id="modal-close">&times;</span>
        <h3 id="modal-medication-title">Refill History & Request</h3>
        <div id="refill-messages"></div>
        <table class="modal-table" id="refill-history-table">
            <thead>
                <tr>
                    <th>Date</th>
                    <th>Order No.</th>
                    <th>Repeats Left</th>
                    <th>Status</th>
                </tr>
            </thead>
            <tbody id="refill-history-body">
                <!-- Filled by JS -->
            </tbody>
        </table>
        <div class="modal-footer">
            <button id="btn-request-refill-modal" class="btn-request-refill" style="display: none;">Request Refill</button>
        </div>
    </div>
</div>

<script>

    async function debugAvailableRefills() {
        try {
            const response = await fetch('/CustomerRefill/DebugAvailableRefills');
            const data = await response.json();
            document.getElementById('debug-output').innerHTML = '<pre>' + JSON.stringify(data, null, 2) + '</pre>';
        } catch (error) {
            document.getElementById('debug-output').innerHTML = 'Error: ' + error.message;
        }
    }



    async function debugCurrentScriptLine() {
        // Get the first available script line ID for testing
        const firstScriptLine = document.querySelector('[data-script-line-id]');
        if (firstScriptLine) {
            const scriptLineId = firstScriptLine.dataset.scriptLineId;
            try {
                const response = await fetch(`/CustomerRefill/DebugScriptLine?scriptLineId=${scriptLineId}`);
                const data = await response.json();
                document.getElementById('debug-output').innerHTML = '<pre>' + JSON.stringify(data, null, 2) + '</pre>';
            } catch (error) {
                document.getElementById('debug-output').innerHTML = 'Error: ' + error.message;
            }
        } else {
            document.getElementById('debug-output').innerHTML = 'No script lines found on page';
        }
    }





    document.addEventListener('DOMContentLoaded', () => {
        let currentScriptLineId = null;
        let currentMedicationName = null;

        const refillModal = document.getElementById('refill-modal');
        const modalClose = document.getElementById('modal-close');
        const refillHistoryBody = document.getElementById('refill-history-body');
        const modalTitle = document.getElementById('modal-medication-title');
        const refillMessages = document.getElementById('refill-messages');
        const requestRefillBtn = document.getElementById('btn-request-refill-modal');

        // Toggle prescription details when clicking doctor rows
        document.querySelectorAll('.order-row').forEach(row => {
            row.addEventListener('click', () => {
                const id = row.dataset.prescriptionId;
                const detailsRow = document.querySelector(`.medication-details[data-parent-id="${id}"]`);

                // Toggle the current details
                if (detailsRow.style.display === 'table-row') {
                    detailsRow.style.display = 'none';
                } else {
                    // Close all other open details first
                    document.querySelectorAll('.medication-details').forEach(detail => {
                        detail.style.display = 'none';
                    });
                    // Then open the current one
                    detailsRow.style.display = 'table-row';
                }
            });
        });



        // Show refill history modal
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('btn-view-history')) {
                currentScriptLineId = e.target.dataset.scriptLineId;
                currentMedicationName = e.target.dataset.medicationName;

                modalTitle.textContent = `${currentMedicationName} - Refill History`;
                refillMessages.innerHTML = '';
                requestRefillBtn.style.display = 'none';

                loadRefillHistory(currentScriptLineId);
            }
        });



        // Request refill from main table
        document.addEventListener('click', function(e) {
            if (e.target.classList.contains('btn-request-refill')) {
                const scriptLineId = e.target.dataset.scriptLineId;
                const medicationName = e.target.dataset.medicationName;

                if (confirm(`Request refill for ${medicationName}?`)) {
                    requestRefill(scriptLineId, e.target);
                }
            }
        });



        // Request refill from modal
        requestRefillBtn.addEventListener('click', function() {
            if (currentScriptLineId) {
                requestRefill(currentScriptLineId, null, true);
            }
        });



        // Load refill history from API
        async function loadRefillHistory(scriptLineId) {
            refillHistoryBody.innerHTML = '<tr><td colspan="4" class="loading">Loading history...</td></tr>';
            refillModal.style.display = 'block';

            try {
                const response = await fetch(`/CustomerRefill/GetRefillHistory?scriptLineId=${scriptLineId}`);

                if (!response.ok) {
                    throw new Error(`HTTP error! status: ${response.status}`);
                }

                const data = await response.json();

                if (data.success) {
                    refillHistoryBody.innerHTML = '';

                    if (data.history && data.history.length > 0) {
                        data.history.forEach(entry => {
                            const tr = document.createElement('tr');
                            tr.innerHTML = `
                                <td>${entry.date || 'N/A'}</td>
                                <td>${entry.orderNumber || 'N/A'}</td>
                                <td>${entry.repeatsLeft !== undefined ? entry.repeatsLeft : 'N/A'}</td>
                                <td>${entry.status || 'N/A'}</td>`;
                            refillHistoryBody.appendChild(tr);
                        });

                        // Show request button if current repeats > 0
                        if (data.currentRepeats > 0) {
                            requestRefillBtn.style.display = 'inline-block';
                            requestRefillBtn.textContent = `Request Refill (${data.currentRepeats} left)`;
                        } else {
                            requestRefillBtn.style.display = 'none';
                        }
                    } else {
                        refillHistoryBody.innerHTML = '<tr><td colspan="4" style="color:#999; padding: 20px;">No refill history found for this medication.</td></tr>';
                        requestRefillBtn.style.display = 'none';
                    }
                } else {
                    refillHistoryBody.innerHTML = `<tr><td colspan="4" style="color:red; padding: 20px;">Error: ${data.message || 'Unknown error'}</td></tr>`;
                    requestRefillBtn.style.display = 'none';
                }
            } catch (error) {
                console.error('Error loading refill history:', error);
                refillHistoryBody.innerHTML = `<tr><td colspan="4" style="color:red; padding: 20px;">Network error: Unable to load history</td></tr>`;
                requestRefillBtn.style.display = 'none';
            }
        }




        // Request refill function
            // Request refill function
    async function requestRefill(scriptLineId, buttonElement = null, fromModal = false) {
        console.log(`=== REQUEST REFILL START ===`);
        console.log(`ScriptLineID: ${scriptLineId}`);
        console.log(`From modal: ${fromModal}`);
        console.log(`Button element: ${buttonElement}`);

        const token = document.querySelector('input[name="__RequestVerificationToken"]').value;
        console.log(`Token exists: ${!!token}`);

        try {
            const requestBody = {
                scriptLineId: parseInt(scriptLineId)
            };

            console.log('Request body:', requestBody);

            const response = await fetch('/CustomerRefill/RequestRefill', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': token
                },
                body: JSON.stringify(requestBody)
            });

            console.log(`Response status: ${response.status}`);

            if (!response.ok) {
                throw new Error(`HTTP error! status: ${response.status}`);
            }

            const data = await response.json();
            console.log('Response data:', data);

            if (data.success) {
                console.log('Refill successful');
                // ... rest of your success handling code
            } else {
                console.error('Server returned error:', data.message);
                // ... rest of your error handling code
            }
        } catch (error) {
            console.error('Error requesting refill:', error);
            // ... rest of your error handling code
        }
    }

        // Modal close functionality
        modalClose.addEventListener('click', () => refillModal.style.display = 'none');
        window.addEventListener('click', e => {
            if (e.target === refillModal) refillModal.style.display = 'none';
        });
    });
</script>
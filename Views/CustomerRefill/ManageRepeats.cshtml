@model List<IbhayiPharmacy.Models.PharmacistVM.RefillMedicationVM>
@{
    ViewData["Title"] = "Manage Refills";
    Layout = null;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>Manage Refills</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: Arial, sans-serif;
            background-color: #f7f9fb;
            color: #333;
            height: 100vh;
            overflow: hidden;
        }

        .dashboard-wrapper {
            display: flex;
            height: 100vh;
            width: 100vw;
        }

        /* Left Sidebar Styles */
        .sidebar-left {
            width: 250px;
            background: linear-gradient(to bottom, #22586A, #22586A);
            color: white;
            display: flex;
            flex-direction: column;
            padding: 20px 0;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
        }

        .sidebar-header {
            text-align: center;
            padding: 20px;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar-content {
            flex: 1;
            padding: 20px 0;
        }

        .sidebar-button-container {
            display: flex;
            flex-direction: column;
            align-items: stretch;
            width: 100%;
        }

        .sidebar-button {
            display: block;
            width: 100%;
            text-align: left;
            padding: 15px 25px;
            margin: 5px 0;
            background: transparent;
            color: white;
            font-weight: bold;
            text-decoration: none;
            border: none;
            border-radius: 0;
            cursor: pointer;
            transition: all 0.3s ease;
            font-size: 16px;
            border-left: 4px solid transparent;
        }

            .sidebar-button:hover {
                background-color: rgba(255, 255, 255, 0.15);
                border-left-color: #1f9f77;
                color: #e0f7f5;
            }

        /* Main Content Styles */
        .main-content {
            flex: 1;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }

        .content-header {
            background: white;
            padding: 20px 30px;
            border-bottom: 1px solid #e0e0e0;
            box-shadow: 0 2px 4px rgba(0,0,0,0.05);
        }

        .content-body {
            flex: 1;
            padding: 30px;
            overflow-y: auto;
        }

        /* Right Sidebar Styles */
        .sidebar-right {
            width: 300px;
            background: linear-gradient(145deg, #ffffff, #f0f0f0);
            border-left: 1px solid #ddd;
            display: flex;
            flex-direction: column;
            padding: 20px;
        }

        .profile-container {
            display: flex;
            flex-direction: column;
            align-items: center;
            position: relative;
            margin-bottom: 30px;
            padding-bottom: 20px;
            border-bottom: 1px solid #e0e0e0;
        }

        .profile-icon img {
            width: 80px;
            height: 80px;
            border-radius: 50%;
            cursor: pointer;
            border: 4px solid #1f9f77;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            transition: transform 0.2s;
        }

            .profile-icon img:hover {
                transform: scale(1.05);
            }

        .profile-menu {
            position: absolute;
            top: 100px;
            background: #fff;
            border: 1px solid #ccc;
            box-shadow: 0 4px 12px rgba(0,0,0,0.15);
            padding: 10px;
            border-radius: 8px;
            width: 180px;
            z-index: 1000;
        }

            .profile-menu a {
                display: block;
                padding: 10px;
                color: #333;
                text-decoration: none;
                border-radius: 5px;
                transition: background-color 0.2s;
            }

                .profile-menu a:hover {
                    background-color: #eaeaea;
                }

        .hidden {
            display: none;
        }

        /* Refill Panel Styles */
        .refill-panel {
            background-color: #ffffff;
            border: 1px solid #e0e0e0;
            border-radius: 12px;
            box-shadow: 0 4px 12px rgba(0,0,0,0.08);
            padding: 30px;
            height: 100%;
            display: flex;
            flex-direction: column;
        }

        h2 {
            color: #1f9f77;
            margin-bottom: 25px;
            font-size: 28px;
            font-weight: 600;
        }

        .refill-table, .modal-table {
            width: 100%;
            border-collapse: collapse;
            background-color: #ffffff;
            border: 1px solid #e0e0e0;
            border-radius: 8px;
            overflow: hidden;
            box-shadow: 0 2px 8px rgba(0, 0, 0, 0.05);
        }

            .refill-table th, .refill-table td,
            .modal-table th, .modal-table td {
                padding: 15px 12px;
                text-align: center;
                border: 1px solid #e0e0e0;
            }

            .refill-table thead,
            .modal-table thead {
                background-color: #1f9f77;
                color: white;
            }

            .refill-table tbody tr:nth-child(even),
            .modal-table tbody tr:nth-child(even) {
                background-color: #f9f9f9;
            }

            .refill-table tbody tr:hover,
            .modal-table tbody tr:hover {
                background-color: #e3f5f0;
            }

        .btn-upload {
            background-color: #1f9f77;
            color: white;
            padding: 10px 20px;
            border: none;
            border-radius: 6px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            font-size: 14px;
        }

            .btn-upload:hover {
                background-color: #28bf96;
                transform: translateY(-1px);
                box-shadow: 0 4px 8px rgba(0,0,0,0.1);
            }

            .btn-upload:disabled {
                background-color: #cccccc;
                cursor: not-allowed;
                transform: none;
                box-shadow: none;
            }

        /* Notifications Panel */
        .notifications {
            background-color: #ffffff;
            border: 1px solid #e0e0e0;
            padding: 25px;
            border-radius: 12px;
            box-shadow: 0 4px 8px rgba(0,0,0,0.05);
            margin-top: 20px;
        }

            .notifications h4 {
                font-size: 18px;
                margin-bottom: 20px;
                color: #333;
                font-weight: 600;
            }

            .notifications ul {
                list-style-type: none;
            }

            .notifications li {
                padding: 15px 0;
                border-bottom: 1px solid #f0f0f0;
                font-size: 15px;
                color: #555;
            }

                .notifications li:last-child {
                    border-bottom: none;
                }

        /* Modal Styles */
        .modal {
            display: none;
            position: fixed;
            z-index: 9999;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background: rgba(0, 0, 0, 0.5);
        }

        .modal-content {
            background-color: #ffffff;
            margin: 5% auto;
            padding: 30px;
            border-radius: 12px;
            width: 800px;
            max-width: 90%;
            position: relative;
            box-shadow: 0 8px 24px rgba(0, 0, 0, 0.2);
            color: #333;
            max-height: 80vh;
            overflow-y: auto;
        }

            .modal-content h3 {
                color: #1f9f77;
                margin-bottom: 20px;
                display: flex;
                justify-content: space-between;
                align-items: center;
                font-size: 24px;
            }

        .close {
            position: absolute;
            right: 20px;
            top: 15px;
            color: #999;
            font-size: 28px;
            cursor: pointer;
            font-weight: bold;
            transition: color 0.2s;
        }

            .close:hover {
                color: red;
            }

        .modal-footer {
            text-align: right;
            margin-top: 20px;
            font-weight: bold;
            padding-top: 20px;
            border-top: 1px solid #e0e0e0;
        }

        .no-refills {
            text-align: center;
            padding: 60px 40px;
            color: #666;
            font-size: 18px;
            background: #f9f9f9;
            border-radius: 8px;
            margin: 20px 0;
        }

        .repeats-badge {
            display: inline-block;
            padding: 6px 12px;
            border-radius: 20px;
            font-size: 12px;
            font-weight: bold;
        }

        .repeats-available {
            background-color: #d4edda;
            color: #155724;
        }

        .repeats-low {
            background-color: #fff3cd;
            color: #856404;
        }

        /* Scrollbar Styling */
        .content-body::-webkit-scrollbar {
            width: 8px;
        }

        .content-body::-webkit-scrollbar-track {
            background: #f1f1f1;
            border-radius: 4px;
        }

        .content-body::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 4px;
        }

            .content-body::-webkit-scrollbar-thumb:hover {
                background: #a8a8a8;
            }
    </style>
</head>
<body>
    <div class="dashboard-wrapper">
        <!-- Left Sidebar -->
        <aside class="sidebar sidebar-left">
            <div class="sidebar-header">
                <img style="height:160px;width:220px;" src="~/css/img/ibhayi2.png" alt="Ibhayi Pharmacy" />
            </div>
            <div class="sidebar-content">
                <nav>
                    <div class="sidebar-button-container">
                        <a asp-controller="CustomerDashboard" asp-action="UploadPrescription" class="sidebar-button">📥 Upload Prescription</a>
                        <a asp-controller="CustomerOrders" asp-action="PlaceOrder" class="sidebar-button">🛒 Place Orders</a>
                        <a asp-controller="CustomerDashboard" asp-action="TrackOrder" class="sidebar-button">📦 Track Orders</a>
                        <a asp-controller="CustomerRefill" asp-action="ManageRepeats" class="sidebar-button">🔁 Manage Repeats</a>
                        <a asp-controller="CustomerDashboard" asp-action="ViewReports" class="sidebar-button">📄 View Reports</a>
                        <a asp-controller="Home" asp-action="Index"
                           class="sidebar-button"
                           onclick="return confirm('Are you sure you want to log out?');">
                            &#10145; Logout
                        </a>
                    </div>
                </nav>
            </div>
        </aside>

        <!-- Main Content -->
        <main class="main-content">
            <div class="content-header">
                <h1>Customer Dashboard</h1>
            </div>
            <div class="content-body">
                <div class="refill-panel">
                    <h2>🔁 Manage Refills</h2>

                    @if (Model.Any())
                    {
                        <table class="refill-table" id="refills-table">
                            <thead>
                                <tr>
                                    <th>Medication</th>
                                    <th>Doctor</th>
                                    <th>Repeats Left</th>
                                    <th>Last Refill</th>
                                    <th>Price</th>
                                    <th>Action</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var medication in Model)
                                {
                                    <tr class="refill-row">
                                        <td><strong>@medication.MedicationName</strong></td>
                                        <td>@medication.DoctorName</td>
                                        <td>
                                            <span class="repeats-badge @(medication.RepeatsLeft > 2 ? "repeats-available" : "repeats-low")">
                                                @medication.RepeatsLeft / @medication.TotalRepeats
                                            </span>
                                        </td>
                                        <td>@medication.LastRefillDate.ToString("yyyy-MM-dd")</td>
                                        <td>R @medication.CurrentPrice</td>
                                        <td>
                                            <button class="btn-upload view-history-btn"
                                                    data-script-line-id="@medication.ScriptLineID"
                                                    data-medication-name="@medication.MedicationName">
                                                View History & Refill
                                            </button>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    }
                    else
                    {
                        <div class="no-refills">
                            <p>📭 No medications available for refill.</p>
                            <p style="font-size: 14px; color: #888; margin-top: 10px;">
                                Medications will appear here when you have approved prescriptions with remaining repeats.
                            </p>
                        </div>
                    }
                </div>
            </div>
        </main>

        <!-- Right Sidebar -->
        <aside class="sidebar sidebar-right">
            <div class="profile-container">
                <div class="profile-icon" onclick="toggleProfileMenu()">
                    <img src="~/css/img/Customer_img/Profile.png" alt="Profile" />
                </div>
                <div id="profileMenu" class="profile-menu hidden">
                    <a asp-controller="CustomerDashboard" asp-action="Profile" class="sidebar-button">👤 Account</a>
                    <a asp-controller="Home" asp-action="Index" class="sidebar-button">🚪 Logout</a>
                </div>
            </div>

            <div class="notifications">
                <h4>🔔 Refill Notifications</h4>
                <ul>
                    @foreach (var medication in Model.Take(2))
                    {
                        <li>
                            💊 <strong>@medication.MedicationName</strong> - @medication.RepeatsLeft repeats left
                        </li>
                    }
                    @if (!Model.Any())
                    {
                        <li>No active refills available</li>
                    }
                </ul>
            </div>
        </aside>
    </div>

    <!-- Refill History Modal -->
    <div class="modal" id="refill-modal">
        <div class="modal-content">
            <span class="close" id="modal-close">&times;</span>
            <h3 id="modal-medication-title">Dispensing History</h3>
            <table class="modal-table" id="refill-history-table">
                <thead>
                    <tr>
                        <th>Date Dispensed</th>
                        <th>Order No.</th>
                        <th>Repeats Left After</th>
                        <th>Request Refill</th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Filled by JavaScript -->
                </tbody>
            </table>
        </div>
    </div>

    <!-- Order Summary Modal -->
    <div class="modal" id="order-summary-modal">
        <div class="modal-content">
            <span class="close" id="order-summary-close">&times;</span>
            <h3>
                <span id="summary-order-no">Order No: </span>
                <span id="summary-order-date" style="float:right;"></span>
            </h3>
            <p><strong>Doctor:</strong> <span id="summary-doctor"></span></p>
            <table class="modal-table">
                <thead>
                    <tr>
                        <th>Medication</th>
                        <th>Qty</th>
                        <th>Price</th>
                        <th>Subtotal</th>
                    </tr>
                </thead>
                <tbody id="order-summary-body">
                    <!-- JS will populate -->
                </tbody>
            </table>
            <div class="modal-footer">
                Total: R<span id="order-total">0.00</span>
            </div>
        </div>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            const modal = document.getElementById('refill-modal');
            const modalClose = document.getElementById('modal-close');
            const refillTableBody = document.querySelector('#refill-history-table tbody');
            const modalTitle = document.getElementById('modal-medication-title');

            let currentScriptLineId = null;

            // View history button click
            document.querySelectorAll('.view-history-btn').forEach(btn => {
                btn.addEventListener('click', async () => {
                    currentScriptLineId = btn.dataset.scriptLineId;
                    const medName = btn.dataset.medicationName;
                    modalTitle.textContent = `${medName} - Dispensing History`;

                    // Load refill history from server
                    await loadRefillHistory(currentScriptLineId);
                    modal.style.display = 'block';
                });
            });

            async function loadRefillHistory(scriptLineId) {
                try {
                    console.log('Loading history for scriptLineId:', scriptLineId);
                    const response = await fetch(`/CustomerRefill/GetRefillHistory?scriptLineId=${scriptLineId}`);
                    const result = await response.json();

                    console.log('Full API Response:', result); // Debug log

                    refillTableBody.innerHTML = '';

                    if (result.success && result.history && result.history.length > 0) {
                        console.log('History data found:', result.history);

                        result.history.forEach((entry, index) => {
                            console.log(`Entry ${index}:`, entry);

                            const tr = document.createElement('tr');

                            const isNewOrder = entry.OrderNumber === "New Order";

                            tr.innerHTML = `
                                <td>${entry.Date || 'No Date'}</td>
                                <td>
                                    ${!isNewOrder
                                        ? `<a href="#" class="order-summary-link" data-order-number="${entry.OrderNumber}">${entry.OrderNumber}</a>`
                                        : '<strong>New Order</strong>'
                                    }
                                </td>
                                <td>${entry.RepeatsLeft !== undefined ? entry.RepeatsLeft : 'N/A'}</td>
                                <td>
                                    ${isNewOrder && result.currentRepeats > 0
                                        ? `<button class="btn-upload request-refill-btn" data-script-line-id="${scriptLineId}">Place Order</button>`
                                        : `<span style="color:#888;">${isNewOrder ? 'No repeats left' : 'Dispensed'}</span>`
                                    }
                                </td>`;
                            refillTableBody.appendChild(tr);
                        });

                        // Add event listeners to new refill buttons
                        document.querySelectorAll('.request-refill-btn').forEach(btn => {
                            btn.addEventListener('click', requestRefill);
                        });
                    } else {
                        console.log('No history data found');
                        refillTableBody.innerHTML = `<tr><td colspan="4" style="color:#999;">No dispensing history found.</td></tr>`;
                    }
                } catch (error) {
                    console.error('Error loading refill history:', error);
                    refillTableBody.innerHTML = `<tr><td colspan="4" style="color:red;">Error loading history.</td></tr>`;
                }
            }

            async function requestRefill(e) {
                const scriptLineId = e.target.dataset.scriptLineId;

                // Disable button and show loading
                e.target.disabled = true;
                e.target.textContent = 'Processing...';

                try {
                    const response = await fetch('/CustomerRefill/RequestRefill', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                        },
                        body: JSON.stringify({ scriptLineId: parseInt(scriptLineId) })
                    });

                    const result = await response.json();

                    if (result.success) {
                        alert(`✅ Order placed successfully!\nOrder Number: ${result.orderNumber}\nRepeats Left: ${result.repeatsLeft}`);
                        modal.style.display = 'none';
                        location.reload(); // Refresh to update repeats left
                    } else {
                        alert(`❌ Error: ${result.message}`);
                        e.target.disabled = false;
                        e.target.textContent = 'Place Order';
                    }
                } catch (error) {
                    console.error('Error placing order:', error);
                    alert('❌ Error placing order. Please try again.');
                    e.target.disabled = false;
                    e.target.textContent = 'Place Order';
                }
            }

            // Modal close functionality
            modalClose.addEventListener('click', () => modal.style.display = 'none');
            window.addEventListener('click', e => {
                if (e.target === modal) modal.style.display = 'none';
            });

            // Order summary functionality
            const orderSummaryModal = document.getElementById('order-summary-modal');
            const orderSummaryClose = document.getElementById('order-summary-close');

            document.addEventListener('click', async function (e) {
                if (e.target.classList.contains('order-summary-link')) {
                    e.preventDefault();
                    const orderNumber = e.target.dataset.orderNumber;

                    try {
                        const response = await fetch(`/CustomerRefill/GetOrderSummary?orderNumber=${orderNumber}`);
                        const result = await response.json();

                        if (result.success) {
                            displayOrderSummary(result.order);
                        } else {
                            alert('Error loading order summary: ' + result.message);
                        }
                    } catch (error) {
                        console.error('Error loading order summary:', error);
                        alert('Error loading order summary.');
                    }
                }
            });

            function displayOrderSummary(order) {
                document.getElementById('summary-order-no').textContent = `Order No: ${order.OrderNumber}`;
                document.getElementById('summary-order-date').textContent = order.OrderDate;
                document.getElementById('summary-doctor').textContent = order.DoctorName;

                const summaryBody = document.getElementById('order-summary-body');
                summaryBody.innerHTML = '';

                let total = 0;

                order.Medications.forEach(med => {
                    const tr = document.createElement('tr');
                    tr.innerHTML = `
                        <td>${med.Name}</td>
                        <td>${med.Quantity}</td>
                        <td>R ${med.Price.toFixed(2)}</td>
                        <td>R ${med.Subtotal.toFixed(2)}</td>`;
                    summaryBody.appendChild(tr);
                    total += med.Subtotal;
                });

                document.getElementById('order-total').textContent = parseFloat(order.Total).toFixed(2);
                orderSummaryModal.style.display = 'block';
            }

            orderSummaryClose.addEventListener('click', () => orderSummaryModal.style.display = 'none');
            window.addEventListener('click', e => {
                if (e.target === orderSummaryModal) orderSummaryModal.style.display = 'none';
            });
        });

        function toggleProfileMenu() {
            const menu = document.getElementById("profileMenu");
            menu.classList.toggle("hidden");
        }
    </script>
</body>
</html>